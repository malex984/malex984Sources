#################################################################
###
### Makefile for Singular
###
#################################################################

SHELL		= /bin/sh

##
## version
##
SINGULAR_VERSION	= @SINGULAR_VERSION@
SINGULAR		= @SINGULAR@
SINGUNAME		= @SINGUNAME@

##
## various paths
##
srcdir		= @srcdir@
prefix 		= @prefix@
exec_prefix 	= @exec_prefix@
libdir 		= @libdir@
# program executable goes here
bindir		= @bindir@
# includes are taken from here
includedir	= @includedir@
slibdir		= ${prefix}/LIB
install_bindir  = ${install_prefix}/${SINGUNAME}
install_slibdir = ${install_prefix}/LIB

##
## various programs
##
@SET_MAKE@
CC		= @CC@
CXX		= @CXX@
LEX		= @LEX@
PERL5		= @PERL5@
BISON		= bison
INSTALL		= ./install-sh -c
INSTALL_PROGRAM	= ${INSTALL} 
INSTALL_DATA	= ${INSTALL} -m 644
MKINSTALLDIRS   = ./mkinstalldirs
LN_S		= @LN_S@

##
## compiler and linker options
##
PIPE		= @PIPE@
CFLAGS		= @CFLAGS@ ${PIPE}
CXXFLAGS	= @CXXFLAGS@ ${PIPE}
CXXTEMPLFLAGS	= @CXXTEMPLFLAGS@
CPPFLAGS	= -I${srcdir} @CPPFLAGS@
DEFS		= -DNDEBUG -D@SING_UNAME@ @DEFS@
LDFLAGS		= @LDFLAGS@
LD_DYN_FLAGS	= @LD_DYN_FLAGS@
LD_LIBC	        = @LD_LIBC@
STATIC_LDFLAGS	= @STATIC_LDFLAGS@
LIBS		= -lm @NEED_LIBS@

##
## End configuration dependend stuff
#################################################################

###
### file sets
###

# normal C++ source files
CXXSOURCES=grammar.cc scanner.cc algmap.cc attrib.cc binom.cc clapconv.cc \
    clapmem.cc clapsing.cc cntrlc.cc\
    extra.cc febase.cc feread.cc fehelp.cc feResource.cc feOpt.cc\
    ffields.cc hdegree.cc hilb.cc hutil.cc \
    ideals.cc intvec.cc \
    ipassign.cc ipconv.cc ipid.cc iplib.cc \
    ipprint.cc ipshell.cc khstd.cc kstdfac.cc \
    kstd1.cc kstd2.cc kutil.cc lists.cc \
    longalg.cc longrat.cc longrat0.cc \
    maps.cc matpol.cc misc.cc sdb.cc gnumpfl.cc gnumpc.cc \
    mminit.cc modulop.cc mpr_complex.cc sparsmat.cc \
    fglm.cc fglmzero.cc fglmvec.cc fglmgauss.cc fglmhom.cc fglmcomb.cc \
    numbers.cc polys.cc polys0.cc polys1.cc polys-impl.cc \
    ring.cc shortfl.cc silink.cc sing_mp.cc\
    sing_dld.cc sing_dbm.cc kspoly.cc \
    subexpr.cc syz.cc syz0.cc syz1.cc syz2.cc\
    timer.cc weight.cc \
    mpsr_Put.cc mpsr_PutPoly.cc mpsr_GetPoly.cc \
    mpsr_Get.cc mpsr_GetMisc.cc mpsr_Error.cc \
    GMPrat.cc multicnt.cc npolygon.cc semic.cc spectrum.cc splist.cc \
    ndbm.cc  libparse.cc mod_raw.cc\
    pcv.cc kbuckets.cc prProcs.cc \
    mpr_inout.cc mpr_base.cc mpr_numeric.cc \
    prCopy.cc


# normal C source files
CSOURCES=mmalloc.c mmheap.c mmpage.c mmcheck.c  mmisc.c mmtables.c \
    mmbt.c weight0.c find_exec.c fegetopt.c fereadl.c page.c

# special source files (need extra compiling and/or linking)
ESOURCES=iparith.cc gmalloc.c tesths.cc mpsr_Tok.cc claptmpl.cc

SOURCES=${CSOURCES} ${CXXSOURCES} ${ESOURCES} \
	grammar.y scanner.l libparse.l syz2.cc

# ASO_SOURCES
ASO_SOURCES = structs.aso.cc ipid.aso.cc mmprivate.aso.cc silink.aso.cc \
              matpol.aso.cc longrat.aso.cc kbuckets.aso.cc mpsr_Get.aso.cc \
	      attrib.aso.cc lists.aso.cc kutil.aso.cc \
              syz.aso.cc subexpr.aso.cc 

HEADERS=algmap.h hutil.h lists.h stairc.h attrib.h ideals.h \
	longalg.h mpsr_Tok.h structs.h binom.h intvec.h longrat.h \
	numbers.h stype.h clapconv.h ipconv.h maps.h page.h \
	subexpr.h clapsing.h ipid.h matpol.h polys.h syz.h \
	cntrlc.h ipprint.h ring.h timer.h sdb.h \
	febase.h ipshell.h shortfl.h tok.h mpr_complex.h mpr_global.h \
	mmemory.h mmprivate.h mmpage.h page.h \
	ffields.h khstd.h silink.h sparsmat.h gnumpfl.h gnumpc.h \
	fglm.h kstd1.h modulop.h sing_dbm.h weight.h \
	fglmgauss.h fglmvec.h mpsr.h sing_mp.h \
	kstdfac.h mpsr_Get.h mmbt.h \
	kutil.h mpsr_Put.h sing_dld.h\
	ndbm.h polys-impl.h polys-comp.h libparse.h \
        GMPrat.h multicnt.h npolygon.h semic.h spectrum.h splist.h multicnt.h \
	pcv.h mod_raw.h kbuckets.h prProcs.h \
	mpr_global.h mpr_inout.h mpr_base.h mpr_numeric.h \
	feOpt.h fegetopt.h distrib.h walk.h \
	prCopy.h

INCS=febase.inc polys.inc iparith.inc mpsr_Tok.inc feOpt.inc

DISTFILES=${SOURCES} ${HEADERS} Makefile.in configure.in configure \
	mod2.h.in grammar.h testgh install-sh mkinstalldirs \
	${INCS} $(ASO_SOURCES) check_aso.pl aso.h

OBJS := $(CXXSOURCES:.cc=.o) $(CSOURCES:.c=.o)

ASO_OBJS := $(ASO_SOURCES:.aso.cc=.aso) 

#
# Singular libraries which go into distribution
# MAKE SURE THAT THIS IS UP_TO_DATE
#
SLIBS = algebra.lib        all.lib            classify.lib       deform.lib  \
        elim.lib           factor.lib         finvar.lib         general.lib \
        graphics.lib       hnoether.lib       homolog.lib        inout.lib   \
        invar.lib          jordan.lib         latex.lib          linalg.lib  \
        matrix.lib         mondromy.lib       normal.lib                     \
        poly.lib           presolve.lib       primdec.lib                    \
        primitiv.lib       random.lib         ring.lib           sing.lib    \
        solve.lib          solver.lib         spcurve.lib        standard.lib\
        surf.lib           triang.lib         template.lib       spectrum.lib

SLIBS_FILES = $(addprefix LIB/,${SLIBS})

GFTABLES = $(wildcard LIB/gftables/[1-9]*)

##
## Build Targets
##
.l.cc:
	@if test "x${LEX}" = x; then \
		echo Error: no lex given, could not rebuilt scanner.cc;\
                exit 1; \
	fi
	${LEX} -s -I -t $< > scanner.cc
.y.cc:
	@if test "x${BISON}" = x; then \
		echo Error: no bison given, could not rebuilt grammar.cc;\
                exit 1; \
	fi
	${BISON} -d -t -o grammar.cc $<
	chmod +x testgh
	./testgh

.cc.o:	
	${CXX} ${CXXFLAGS} ${CXXTEMPLFLAGS} ${CPPFLAGS} ${DEFS} -c $<
.c.o:
	${CC} ${CFLAGS} ${CPPFLAGS} ${DEFS} -c $<

%.aso.o: %.aso.cc mmtables.inc 
	${CXX} ${CXXFLAGS} ${CXXTEMPLFLAGS} ${CPPFLAGS} ${DEFS} $< -o $@
.PRECIOUS: %.aso.o

%.aso: %.aso.o
	./$< > $@

all:	Singular

Singular: mod2.h Makefile version.h scanner.cc gmalloc.o \
          ${ASO_OBJS} ${OBJS} \
          iparith.o tesths.cc libparse.cc claptmpl.o mpsr_Tok.o
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${CXXTEMPLFLAGS} ${DEFS} \
	  -o Singular \
	  tesths.cc iparith.o mpsr_Tok.o claptmpl.o\
	  ${OBJS} ${LDFLAGS} ${LIBS} ${LD_DYN_FLAGS} \
	  gmalloc.o ${LD_LIBC}

Singular-static: mod2.h Makefile version.h scanner.cc  gmalloc.o \
	        ${ASO_OBJS}  ${OBJS} \
                iparith.o mpsr_Tok.o tesths.cc claptmpl.o
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${CXXTEMPLFLAGS} ${DEFS} \
	  -o Singular-static \
	  tesths.cc iparith.o mpsr_Tok.o claptmpl.o\
	  ${OBJS} ${STATIC_LDFLAGS} ${LDFLAGS} ${LIBS} ${LD_DYN_FLAGS} \
	  gmalloc.o ${LD_LIBC}

iparith.o mpsr_Tok.o : iparith.inc mpsr_Tok.inc

claptmpl.o: claptmpl.cc mod2.h
	${CXX} ${CXXFLAGS}  ${CPPFLAGS} ${DEFS} -c $<	

iparith.inc mpsr_Tok.inc: gmalloc.o claptmpl.o iparith.cc \
                          ipconv.cc tok.h mpsr_Tok.cc grammar.h mod2.h
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${CXXTEMPLFLAGS} ${DEFS} -DGENTABLE \
	     -o gentable claptmpl.o iparith.cc tesths.cc mpsr_Tok.cc \
	     ${OBJS} ${LDFLAGS} ${LIBS} gmalloc.o ${LD_LIBC}
	./gentable
	/bin/rm -f gentable gentable.exe


mmtables.inc: mmtables.c mmprivate.h mmemory.h mod2.h
	${CC} ${CFLAGS}  ${CPPFLAGS}\
	       -DGENERATE_INDEX_TABLE  -DHAVE_ASO=0 -DHAVE_INDEX_TABLE mmtables.c -o mmtables
	./mmtables > mmtables.inc
	rm -f mmtables mmtables.exe

mmtables.o mmtables.d: mmtables.inc

version.h: ${SOURCES} ${HEADERS} Makefile.in mod2.h.in \
           configure.in
	echo unsigned long feVersionId =  `date '+%Y%m%d%H'`\; >version.h

libparse: libparse_main.o utils.o fegetopt.o
	${CXX}  -DHAVE_ASO=0  -o libparse libparse_main.o utils.o fegetopt.o

libparse_main.o: libparse.cc
	${CXX} -c -o libparse_main.o libparse.cc  -DHAVE_ASO=0 -DSTANDALONE_PARSER

libparse.cc: libparse.l
	@if test "x${LEX}" = x; then \
		echo Error: no lex given, could not rebuilt libparse.cc;\
                exit 1; \
	fi
	${LEX} -I -Pyylp -olibparse.cc libparse.l

ESingular: fegetopt.o feResource.cc mod2.h feOpt.cc version.h emacs.cc \
           feOptES.inc
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${DEFS} -o ESingular emacs.cc fegetopt.o ${LDFLAGS} ${LIBS}

ESingular-static: fegetopt.o feResource.cc mod2.h feOpt.cc version.h emacs.cc \
           feOptES.inc
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${DEFS} -o ESingular emacs.cc fegetopt.o ${LDFLAGS} ${STATIC_LDFLAGS} ${LIBS}

feOpt.h: feOpt.inc feOptES.inc

feOpt.inc: feOpt.cc mod2.h
	$(CXX) -DGENERATE_OPTION_INDEX -DHAVE_ASO=0 feOpt.cc -o feOpt
	./feOpt
	/bin/rm -f feOpt feOpt.exe

feOptES.inc: feOpt.cc
	$(CXX) -DGENERATE_OPTION_INDEX  -DHAVE_ASO=0 -DESINGULAR feOpt.cc
	./a.out
	rm a.out

prCopy.cc : prCopy.inc

prCopy.inc : prCopyMacros.h prCopyTemplate.cc prCopy.pl
	$(PERL5) prCopy.pl > prCopy.inc

src: scanner.cc grammar.h grammar.cc libparse.cc 

mod2.h: stamp-h

stamp-h : config.status mod2.h.in
	CONFIG_FILES= CONFIG_HEADERS="mod2.h" ./config.status

Makefile: Makefile.in config.status
	CONFIG_FILES="Makefile" CONFIG_HEADERS= ./config.status

config.status: configure
	./config.status --recheck

configure: configure.in
	@echo "WARNING: You need to rerun autoconf. I am proceeding, for now."
	@touch configure
#	autoconf

##
## install targets
##
install: all installbin installslib

installbin: Singular libparse ESingular
	${MKINSTALLDIRS} ${bindir}
	${INSTALL_PROGRAM} Singular ${bindir}/Singular-${SINGULAR_VERSION}
	${INSTALL_PROGRAM} libparse ${bindir}/libparse
	${INSTALL_PROGRAM} ESingular ${bindir}/ESingular
	chmod a+x ${bindir}/Singular-${SINGULAR_VERSION}
	rm -f ${bindir}/Singular
	cd ${bindir}; ${LN_S} Singular-${SINGULAR_VERSION} Singular;\
	if test ! -x ${SINGULAR}; then \
		${LN_S} Singular-${SINGULAR_VERSION} ${SINGULAR};\
	fi

installslib: LIB
	test -r ${slibdir} || ${LN_S} `pwd`/LIB ${slibdir}


uninstall: uninstallbin

uninstallbin:
	rm -f ${bindir}/Singular rm -f ${bindir}/Singular-${SINGULAR_VERSION}
	-rmdir ${bindir}

##
## clean targest
##
mostlyclean: 
	-rm -f Singular Singularg Singularp Singularb libparse feOpt*.inc
	-rm -f *.o *.og core *.op *.ob *.ot Singulart

clean: mostlyclean
	 -rm -f *.aso *.bak *.d *.dd depend 

distclean: clean
	-rm -f iparith.inc mpsr_Tok.inc stamp.h 
	-rm -f Singular* *.gprof *.bprof *~ .\#* version.h
	-rm -f mod2.h Makefile TAGS* tags config.status config.cache config.log

srcclean:
	@echo "This command is intended for maintainers to use;"
	@echo "Rebuilding the deleted files requires flex"
	@echo "bison, perl"
	-rm -f scanner.cc grammar.h grammar.cc libparse.cc

maintainer-clean: distclean srcclean
	@echo "This command is intended for maintainers to use;"
	@echo "Rebuilding the deleted files requires flex"
	@echo "bison, perl and autoconf"
	-rm configure

##
## miscellanous targets
##

Singular-bindist: $(HEADERS) $(SOURCES) Makefile
	echo "#define MAKE_DISTRIBUTION	" > distrib.h
	${MAKE} Singular ESingular
	${INSTALL_PROGRAM} -s Singular Singular-bindist
	${INSTALL_PROGRAM} -s ESingular ESingular-bindist
	echo "#undef MAKE_DISTRIBUTION " > distrib.h

Singular-static-bindist: $(HEADERS) $(SOURCES) Makefile
	echo "#define MAKE_DISTRIBUTION	" > distrib.h
	${MAKE} Singular-static ESingular-static 
	${INSTALL_PROGRAM} -s Singular-static Singular-static-bindist
	${INSTALL_PROGRAM} -s ESingular-static ESingular-static-bindist
	echo "#undef MAKE_DISTRIBUTION " > distrib.h

install-bindist: Singular-bindist ESingular-bindist libparse
	${MKINSTALLDIRS} ${install_bindir}
	${INSTALL_PROGRAM} Singular-bindist ${install_bindir}/Singular
	${INSTALL_PROGRAM} ESingular-bindist ${install_bindir}/ESingular
	${INSTALL_PROGRAM} libparse ${install_bindir}/libparse

install-static-bindist: Singular-static-bindist ESingular-static-bindist libparse
	${MKINSTALLDIRS} ${install_bindir}
	${INSTALL_PROGRAM} Singular-static-bindist ${install_bindir}/Singular
	${INSTALL_PROGRAM} ESingular-static-bindist ${install_bindir}/ESingular
	${INSTALL_PROGRAM} libparse ${install_bindir}/libparse

install-sharedist: ${SLIBS_FILES} LIB/gftables
	${MKINSTALLDIRS} ${install_slibdir}
	cp ${SLIBS_FILES} ${install_slibdir}
	${MKINSTALLDIRS} ${install_slibdir}/gftables
	cp ${GFTABLES} ${install_slibdir}/gftables
	chmod -R +rX ${install_slibdir}/*

tar:
	tar cf Singular-${SINGULAR_VERSION}-src.tar ${DISTFILES}
	gzip -f Singular-${SINGULAR_VERSION}-src.tar


TAGS:   ${SOURCES} ${HEADERS} ${INCS}
	etags ${SOURCES} ${HEADERS}

tags:   
	ctags *.y *.l *.c *.h *.cc *.inc

echoLIBS:
	@echo ${SLIBS}

##
## Below here is stuff for developpers
#################################################################

##
## compiler and linker options for debug version
##

CCG		= gcc
CXXG		= gcc
CXXM		= gcc -MM -MG -DGENERATE_DEPEND
CCM		= gcc -MM -MG -DGENERATE_DEPEND

CFLAGSG		= -g -Wall -Wno-unused ${PIPE}
CXXFLAGSG	= -g -Wall -Wno-unused ${PIPE}
CXXTEMPLFLAGSG	= -fno-implicit-templates
DEFSG		= -D@SING_UNAME@ @DEFS@

##
## .og files for having -O and -g object versions available at the same time
##

OBJG1 := $(CXXSOURCES:.cc=.og) 
OBJG2 := $(CSOURCES:.c=.og) 


OBJG=$(OBJG1) $(OBJG2) 

##
## Debug Targets
##

claptmpl.og: claptmpl.cc mod2.h
	$(CXXG)  ${CXXFLAGSG} ${CPPFLAGS} ${DEFSG} -c $< -o $@

$(OBJG1) : %.og: %.cc
	$(CXXG) ${CXXFLAGSG} ${CXXTEMPLFLAGSG} ${CPPFLAGS} ${DEFSG} -c $< -o $@

$(OBJG2) gmalloc.og: %.og: %.c
	$(CCG)  ${CFLAGSG} ${CPPFLAGS} ${DEFSG} -c $< -o $@

Singularg: scanner.cc gmalloc.og \
           $(ASO_OBJS) $(OBJG)  \
           iparith.og mpsr_Tok.og claptmpl.og tesths.cc version.h 
	$(CXXG) ${CXXFLAGSG} ${CXXTEMPLFLAGSG} ${CPPFLAGS} ${DEFSG} -o Singularg \
	tesths.cc iparith.og mpsr_Tok.og claptmpl.og $(OBJG) ${LDFLAGS} ${LIBS} \
	${LD_DYN_FLAGS} gmalloc.og

iparith.og: iparith.inc iparith.cc
	$(CXXG)  ${CXXFLAGSG} ${CXXTEMPLFLAGSG} ${CPPFLAGS} ${DEFSG} -c iparith.cc -o iparith.og

mpsr_Tok.og: iparith.inc mpsr_Tok.cc
	$(CXXG) ${CXXFLAGSG} ${CPPFLAGS} ${CXXTEMPLFLAGSG} ${DEFSG} -c mpsr_Tok.cc -o mpsr_Tok.og

installg: Singularg
	${MKINSTALLDIRS} ${bindir}
	${INSTALL_PROGRAM} Singularg ${bindir}	

##
## compiler and linker options for profile version
##

CCP		= gcc
CXXP		= gcc

CFLAGSP		= -pg -O3 ${PIPE}
CXXFLAGSP	= -pg -O3 ${PIPE}
CXXTEMPLFLAGSP	= -fno-implicit-templates
DEFSP		= -DNDEBUG -DDO_PROFILE -D@SING_UNAME@ @DEFS@
LDFLAGSP	= -static @LDFLAGS@

CFLAGSB		= -g -O3 ${PIPE}
CXXFLAGSB	= -g -O3 ${PIPE}
CXXTEMPLFLAGSB	= -fno-implicit-templates
DEFSB		= -D@SING_UNAME@ -DNDEBUG @DEFS@
LDFLAGSB	= -static @LDFLAGS@

# bprof object  file to link with
BPROFOBJ	= /usr/local/lib/bmon.o

DEFST           = -DNDEBUG -D@SING_UNAME@ -DMTRACK @DEFS@
LDFLAGST        = @LDFLAGS@
CFLAGST		= -g  -w ${PIPE}
CXXFLAGST	= -g  -w ${PIPE}

##
## op and ob files for gprof and bprof, ot for mtrack
##

OBJP1 := $(CXXSOURCES:.cc=.op) 
OBJP2 := $(CSOURCES:.c=.op) 
OBJP=$(OBJP1) $(OBJP2)

OBJB1 := $(CXXSOURCES:.cc=.ob) 
OBJB2 := $(CSOURCES:.c=.ob) 
OBJB=$(OBJB1) $(OBJB2)

OBJT1 := $(CXXSOURCES:.cc=.ot) 
OBJT2 := $(CSOURCES:.c=.ot) 
OBJT=$(OBJT1) $(OBJT2)

##
## profile targets
##

## for gprof
claptmpl.op: claptmpl.cc mod2.h
	$(CXXP)  ${CXXFLAGSP} ${CPPFLAGS} ${DEFSP} -c $< -o $@

$(OBJP1): %.op: %.cc
	$(CXXP) ${CXXFLAGSP} ${CXXTEMPLFLAGSP} ${CPPFLAGS} ${DEFSP} -c $< -o $@

$(OBJP2) gmalloc.op: %.op: %.c
	$(CCP)  ${CFLAGSP} ${CPPFLAGS} ${DEFSP} -c $< -o $@

Singularp: scanner.cc  gmalloc.op \
	   $(ASO_OBJS) $(OBJP) \
           iparith.op mpsr_Tok.op claptmpl.op tesths.cc version.h
	$(CXXP) ${CXXFLAGSP} ${CXXTEMPLFLAGSP} ${CPPFLAGS} ${DEFSP} -o Singularp \
	tesths.cc iparith.op mpsr_Tok.op claptmpl.op $(OBJP) ${LDFLAGSP} ${LIBS} \
	${LD_DYN_FLAGS} gmalloc.op

iparith.op: iparith.inc iparith.cc
	$(CXXP)  ${CXXFLAGSP} ${CXXTEMPLFLAGSP} ${CPPFLAGS} ${DEFSP} -c iparith.cc -o iparith.op

mpsr_Tok.op: iparith.inc mpsr_Tok.cc
	$(CXXP) ${CXXFLAGSP} ${CXXTEMPLFLAGSP} ${CPPFLAGS} ${DEFSP} -c mpsr_Tok.cc -o mpsr_Tok.op


## for bprof
claptmpl.ob: claptmpl.cc mod2.h
	$(CXXP)  ${CXXFLAGSP} ${CPPFLAGS} ${DEFSB} -c $< -o $@

$(OBJB1): %.ob: %.cc
	$(CXXP) ${CXXFLAGSP} ${CXXTEMPLFLAGSP} ${CPPFLAGS} ${DEFSB} -c $< -o $@

$(OBJB2) gmalloc.ob: %.ob: %.c
	$(CCP)  ${CFLAGSP} ${CPPFLAGS} ${DEFSB} -c $< -o $@

Singularb: scanner.cc  gmalloc.ob $(OBJB) iparith.ob mpsr_Tok.ob claptmpl.ob tesths.cc version.h
	$(CXXP) ${CXXFLAGSP} ${CPPFLAGS} ${DEFSB} -o Singularb \
	tesths.cc iparith.ob mpsr_Tok.ob claptmpl.ob $(OBJB) $(BPROFOBJ) \
	${LDFLAGSP} ${LIBS} ${LD_DYN_FLAGS} gmalloc.ob

iparith.ob: iparith.inc iparith.cc
	$(CXXP)  ${CXXFLAGSP} ${CXXTEMPLFLAGSP} ${CPPFLAGS} ${DEFSB} -c iparith.cc -o iparith.ob

mpsr_Tok.ob: iparith.inc mpsr_Tok.cc
	$(CXXP) ${CXXFLAGSP} ${CXXTEMPLFLAGSP} ${CPPFLAGS} ${DEFSB} -c mpsr_Tok.cc -o mpsr_Tok.ob

#
# for mtrack
# 
claptmpl.ot: claptmpl.cc mod2.h
	$(CXXP)  ${CXXFLAGST} ${CPPFLAGS} ${DEFST} -c $< -o $@

$(OBJT1): %.ot: %.cc
	$(CXXP) ${CXXFLAGST} ${CXXTEMPLFLAGSP} ${CPPFLAGS} ${DEFST} -c $< -o $@

$(OBJT2) gmalloc.ot: %.ot: %.c
	$(CCP)  ${CFLAGST} ${CPPFLAGS} ${DEFST} -c $< -o $@

Singulart: scanner.cc  gmalloc.ot $(OBJT) iparith.ot mpsr_Tok.ot claptmpl.ot tesths.cc version.h
	$(CXXP) ${CXXFLAGST} ${CPPFLAGS} ${DEFST} -o Singulart \
	tesths.cc iparith.ot mpsr_Tok.ot claptmpl.ot $(OBJT) ${LDFLAGST} ${LIBS} \
	${LD_DYN_FLAGS} gmalloc.ot

iparith.ot: iparith.ic iparith.cc
	$(CXXP)  ${CXXFLAGST} ${CXXTEMPLFLAGSB} ${CPPFLAGS} ${DEFST} -c iparith.cc -o iparith.ot

mpsr_Tok.ot: iparith.inc mpsr_Tok.cc
	$(CXXP) ${CXXFLAGST} ${CXXTEMPLFLAGSB} ${CPPFLAGS} ${DEFST} -c mpsr_Tok.cc -o mpsr_Tok.ot


##
## check_aso
##
check_aso:
	${PERL5} check_aso.pl $(SOURCES)
##
## dependencies
##

%.aso.dd: %.aso.cc mod2.h aso.h
	$(CXXM) ${CPPFLAGS} ${DEFS} $< >> $@

%.dd: %.cc mod2.h 
	echo $(@:.dd=.og) $(@:.dd=.op) $(@:.dd=.ob) $(@:.dd=.ot)" " \\ > $@
	$(CXXM) -DGENTABLE ${CPPFLAGS} ${DEFSG} $< >> $@

%.d: %.c mod2.h 
	echo $(@:.d=.og) $(@:.d=.op) $(@:.d=.ob) $(@:.d=.ot)" " \\ > $@
	$(CCM) ${CPPFLAGS} ${DEFSG} $< >> $@

depend:   $(ASO_SOURCES:.cc=.dd) $(CXXSOURCES:.cc=.dd) $(CSOURCES:.c=.d) mod2.h 
	cat *.d *.dd >depend

ifeq (depend,$(wildcard depend))
include depend
endif



