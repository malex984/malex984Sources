#################################################################
###
### Makefile for Singular
###
#################################################################

SHELL		= /bin/sh

##
## version
##
SINGULAR_VERSION	= @SINGULAR_VERSION@
SINGULAR		= @SINGULAR@
SINGUNAME		= @SINGUNAME@  

## 
## various paths
##
srcdir		= @srcdir@
prefix 		= @prefix@
exec_prefix 	= @exec_prefix@
libdir 		= @libdir@
# program executable goes here
bindir		= @bindir@
# includes are taken from here
includedir	= @includedir@
slibdir		= ${prefix}/LIB


## 
## various programs
##
@SET_MAKE@
CC		= @CC@
CXX		= @CXX@
LEX		= @LEX@
PERL5		= @PERL5@
BISON		= bison
INSTALL		= ./install-sh -c
INSTALL_PROGRAM	= ${INSTALL}
INSTALL_DATA	= ${INSTALL} -m 644
MKINSTALLDIRS   = ./mkinstalldirs
LN_S		= @LN_S@

##
## compiler and linker options
##
PIPE		= @PIPE@
CFLAGS		= @CFLAGS@ ${PIPE} 
CXXFLAGS	= @CXXFLAGS@ ${PIPE} 
CXXTEMPLFLAGS	= @CXXTEMPLFLAGS@
CPPFLAGS	= -I${srcdir} @CPPFLAGS@
DEFS		= -DNDEBUG -D@SING_UNAME@ @DEFS@
LDFLAGS		= @LDFLAGS@
LD_DYN_FLAGS	= @LD_DYN_FLAGS@
LD_LIBC	        = @LD_LIBC@
STATIC_LDFLAGS	= @STATIC_LDFLAGS@
LIBS		= -lm @NEED_LIBS@

##
## End configuration dependend stuff
#################################################################

###
### file sets
###

CXXSOURCES=grammar.cc scanner.cc algmap.cc attrib.cc binom.cc clapconv.cc \
    clapmem.cc clapsing.cc claptmpl.cc cntrlc.cc \
    extra.cc febase.cc feread.cc fehelp.cc feResource.cc feCmdLineOptions.cc\
    ffields.cc hdegree.cc hilb.cc hutil.cc \
    ideals.cc intvec.cc iparith.cc \
    ipassign.cc ipconv.cc ipid.cc iplib.cc \
    ipprint.cc ipshell.cc khstd.cc kstdfac.cc \
    comm.cc kstd1.cc kstd2.cc kutil.cc lists.cc \
    longalg.cc longrat.cc longrat0.cc \
    maps.cc matpol.cc misc.cc sdb.cc gnumpfl.cc gnumpc.cc \
    mminit.cc modulop.cc mpr_complex.cc sparsmat.cc \
    fglm.cc fglmzero.cc fglmvec.cc fglmgauss.cc fglmhom.cc fglmcomb.cc \
    numbers.cc polys.cc polys0.cc polys1.cc polys-impl.cc \
    ring.cc shortfl.cc silink.cc sing_mp.cc\
    sing_dld.cc sing_dbm.cc spolys.cc spolys0.cc \
    subexpr.cc syz.cc syz0.cc syz1.cc \
    tesths.cc timer.cc weight.cc \
    mpsr_Put.cc mpsr_PutPoly.cc mpsr_Tok.cc mpsr_GetPoly.cc \
    mpsr_Get.cc mpsr_GetMisc.cc mpsr_Error.cc \
    GMPrat.cc multicnt.cc npolygon.cc semic.cc spectrum.cc splist.cc \
    ndbm.cc spSpolyLoop.cc libparse.cc mod_raw.cc\
    pcv.cc kbuckets.cc kbPolyProcs.cc \
    mpr_inout.cc mpr_base.cc mpr_numeric.cc

CSOURCES=gmalloc.c mmalloc.c mmheap.c mmpage.c mmcheck.c  mmisc.c mmtables.c \
    mmbt.c weight0.c find_exec.c getopt.c fereadl.c page.c

SOURCES=${CSOURCES} ${CXXSOURCES} grammar.y scanner.l libparse.l spSpolyLoop.pl generate.pl

HEADERS=algmap.h hutil.h lists.h stairc.h attrib.h ideals.h \
	longalg.h mpsr_Tok.h structs.h binom.h intvec.h longrat.h \
	numbers.h stype.h clapconv.h ipconv.h maps.h page.h \
	subexpr.h clapsing.h ipid.h matpol.h polys.h syz.h \
	cntrlc.h ipprint.h ring.h timer.h sdb.h \
	febase.h ipshell.h shortfl.h tok.h mpr_complex.h mpr_global.h \
	mmemory.h mmprivate.h mmheap.h mmpage.h page.h \
	ffields.h khstd.h silink.h sparsmat.h gnumpfl.h gnumpc.h \
	fglm.h comm.h kstd1.h modulop.h sing_dbm.h weight.h \
	fglmgauss.h fglmvec.h kstd2.h mpsr.h sing_mp.h \
	kstdfac.h mpsr_Get.h spolys.h \
	kutil.h mpsr_Put.h spolys0.h sing_dld.h\
	ndbm.h spSpolyLoop.h polys-impl.h polys-comp.h getopt.h libparse.h \
        GMPrat.h multicnt.h npolygon.h semic.h spectrum.h splist.h multicnt.h \
	pcv.h mod_raw.h kbuckets.h kbPolyProcs.h \
	mpr_global.h mpr_inout.h mpr_base.h mpr_numeric.h 

INCS=febase.inc polys.inc iparith.inc mpsr_Tok.inc spSpolyLoop.inc

TESTS=${testdir}/comparecheck ${testdir}/fac_test.in ${testdir}/fac_test.out\
	${testdir}/general_test.in ${testdir}/general_test.out \
	${testdir}/mpcheck ${testdir}/mpcheck.data \
	${testdir}/dbm_test.in ${testdir}/dbm_test.out

DISTFILES=${SOURCES} ${HEADERS} Makefile.in configure.in configure \
	mod2.h.in grammar.h testgh install-sh mkinstalldirs \
	${INCS}

OBJS=grammar.o scanner.o matpol.o binom.o mpr_complex.o gnumpfl.o gnumpc.o \
     febase.o feread.o fehelp.o feResource.o timer.o intvec.o attrib.o lists.o\
     longrat.o longrat0.o misc.o ring.o numbers.o maps.o\
     hilb.o comm.o kstd1.o kstd2.o kutil.o khstd.o kstdfac.o modulop.o spolys.o\
     ideals.o subexpr.o hdegree.o hutil.o ffields.o shortfl.o \
     longalg.o spolys0.o syz.o syz0.o syz1.o weight.o weight0.o \
     ipid.o ipshell.o iplib.o ipassign.o ipconv.o ipprint.o\
     polys.o polys0.o polys1.o polys-impl.o extra.o sparsmat.o\
     mminit.o mmtables.o mmalloc.o mmheap.o mmpage.o page.o \
     mmisc.o mmcheck.o mmbt.o sing_dld.o sing_dbm.o silink.o \
     sing_mp.o fglm.o fglmzero.o fglmvec.o fglmhom.o fglmgauss.o cntrlc.o \
     algmap.o clapconv.o  clapmem.o clapsing.o claptmpl.o\
     mpsr_Error.o mpsr_Put.o mpsr_PutPoly.o mpsr_GetPoly.o \
     mpsr_Get.o mpsr_GetMisc.o ndbm.o spSpolyLoop.o libparse.o \
     find_exec.o getopt.o fereadl.o  mod_raw.o sdb.o \
     GMPrat.o multicnt.o npolygon.o semic.o spectrum.o splist.o \
     pcv.o kbuckets.o kbPolyProcs.o \
     mpr_inout.o mpr_base.o mpr_numeric.o

# Singular libraries which go into distribution
SLIBS = algebra.lib        all.lib            classify.lib       deform.lib  \
        elim.lib           factor.lib         finvar.lib         general.lib \
        graphics.lib       hnoether.lib       homolog.lib        inout.lib   \
        invar.lib          jordan.lib         latex.lib                      \
        matrix.lib         mondromy.lib       normal.lib                     \
        poly.lib           presolve.lib       primdec.lib                    \
        primitiv.lib       random.lib         ring.lib           sing.lib    \
        solve.lib          solver.lib         spcurve.lib        standard.lib\
        surf.lib           template.lib       

##
## Build Targets
##
.l.cc:
	@if test "x${LEX}" = x; then \
		echo Error: no lex given, could not rebuilt scanner.cc;\
                exit 1; \
	fi
	${LEX} -s -I -t $< > scanner.cc
.y.cc:
	@if test "x${BISON}" = x; then \
		echo Error: no bison given, could not rebuilt grammar.cc;\
                exit 1; \
	fi
	${BISON} -d -t -o grammar.cc $<
	chmod +x testgh
	./testgh

.cc.o:	
	${CXX} ${CXXFLAGS} ${CXXTEMPLFLAGS} ${CPPFLAGS} ${DEFS} -c $<
.c.o:
	${CC} ${CFLAGS} ${CPPFLAGS} ${DEFS} -c $<

all:	Singular

Singular: mod2.h Makefile version.h scanner.cc gmalloc.o \
          ${OBJS} iparith.o mpsr_Tok.o tesths.cc libparse.cc 
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${CXXTEMPLFLAGS} ${DEFS} -o Singular \
	tesths.cc iparith.o mpsr_Tok.o ${OBJS} ${LDFLAGS} ${LIBS} \
	${LD_DYN_FLAGS} gmalloc.o ${LD_LIBC}

Singular-static: mod2.h Makefile version.h scanner.cc  gmalloc.o \
	        ${OBJS} iparith.o mpsr_Tok.o tesths.cc
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${CXXTEMPLFLAGS} ${DEFS} \
	-o Singular-static \
	tesths.cc iparith.o mpsr_Tok.o \
	${OBJS} ${STATIC_LDFLAGS} ${LDFLAGS} ${LIBS} ${LD_DYN_FLAGS} \
	gmalloc.o ${LD_LIBC}

iparith.o mpsr_Tok.o : iparith.inc mpsr_Tok.inc

claptmpl.o: claptmpl.cc mod2.h
	${CXX} ${CXXFLAGS}  ${CPPFLAGS} ${DEFS} -c $<	

iparith.inc mpsr_Tok.inc: gmalloc.o iparith.cc ipconv.cc tok.h mpsr_Tok.cc grammar.h mod2.h
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${CXXTEMPLFLAGS} ${DEFS} -DGENTABLE \
	     -o gentable iparith.cc tesths.cc mpsr_Tok.cc \
	     ${OBJS} ${LDFLAGS} ${LIBS} gmalloc.o ${LD_LIBC}
	./gentable
	/bin/rm -f gentable gentable.exe


mmtables.inc: mmtables.c mmprivate.h mod2.h
	${CXX} ${CXXFLAGS}  ${CPPFLAGS}\
	       -DGENERATE_INDEX_TABLE -DHAVE_INDEX_TABLE mmtables.c -o mmtables
	./mmtables > mmtables.inc
	rm -f mmtables mmtables.exe

mmtables.o mmtables.d: mmtables.inc

version.h: ${SOURCES} ${HEADERS} Makefile.in mod2.h.in \
           configure.in
	echo "#define SINGULAR_VERSION_ID " `date '+%y%m%d%H'` >version.h

kbPolyProcs.cc kbPolyProcs.dd : kbPolyProcs.pin 

kbPolyProcs.pin : generate.pl
	@if test "x${PERL5}" = x; then \
		echo Error: no perl5 given. Can not rebuild $@;\
		exit 1;\
	fi
	${PERL5} generate.pl kb_n_Mult_p kb_p_Mult_m kb_p_Add_q kb_p_Minus_m_Mult_q > $@

spSpolyLoop.cc spSpolyLoop.dd : spSpolyLoop.inc

spSpolyLoop.inc: spSpolyLoop.pl
	@if test "x${PERL5}" = x; then \
		echo Error: no perl5 given. Can not rebuild spSpolyLoop.inc;\
		exit 1;\
	fi
	${PERL5} spSpolyLoop.pl > spSpolyLoop.inc

libparse: libparse_main.o utils.o getopt.o
	${CXX} -o libparse libparse_main.o utils.o getopt.o

libparse_main.o: libparse.cc
	${CXX} -c -o libparse_main.o libparse.cc -DSTANDALONE_PARSER

libparse.cc: libparse.l
	@if test "x${LEX}" = x; then \
		echo Error: no lex given, could not rebuilt libparse.cc;\
                exit 1; \
	fi
	${LEX} -I -Pyylp -olibparse.cc libparse.l

ESingular: feResource.cc mod2.h feCmdLineOptions.cc version.h emacs.cc
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${DEFS} -o ESingular emacs.cc

src: scanner.cc grammar.h grammar.cc libparse.cc spSpolyLoop.inc

mod2.h: stamp-h

stamp-h : config.status mod2.h.in  
	CONFIG_FILES= CONFIG_HEADERS="mod2.h" ./config.status

Makefile: Makefile.in config.status 
	CONFIG_FILES="Makefile" CONFIG_HEADERS= ./config.status

config.status: configure
	./config.status --recheck

configure: configure.in
	@echo "WARNING: You need to rerun autoconf. I am proceeding, for now."
	@touch configure
#	autoconf 

##
## install targets
##
install: all installbin installslib

installbin: Singular libparse ESingular
	${MKINSTALLDIRS} ${bindir}
	${INSTALL_PROGRAM} Singular ${bindir}/Singular-${SINGULAR_VERSION}
	${INSTALL_PROGRAM} libparse ${bindir}/libparse
	${INSTALL_PROGRAM} ESingular ${bindir}/ESingular
	chmod a+x ${bindir}/Singular-${SINGULAR_VERSION}
	rm -f ${bindir}/Singular
	cd ${bindir}; ${LN_S} Singular-${SINGULAR_VERSION} Singular;\
	if test ! -x ${SINGULAR}; then \
		${LN_S} Singular-${SINGULAR_VERSION} ${SINGULAR};\
	fi

installslib: LIB
	test -r ${slibdir} || ${LN_S} `pwd`/LIB ${slibdir}


uninstall: uninstallbin 

uninstallbin:
	rm -f ${bindir}/Singular rm -f ${bindir}/Singular-${SINGULAR_VERSION}
	-rmdir ${bindir}

##
## clean targest
##
mostlyclean: clean

clean:
	-rm -f Singular Singularg Singularp Singularb libparse \
            *.o *.og core *.op *.ob 

distclean: clean
	-rm -f depend iparith.inc mpsr_Tok.inc stamp.h *.d *.dd 
	-rm -f Singular* *.gprof *.bprof *~ .\#* version.h
	-rm -f mod2.h Makefile TAGS* tags config.status config.cache config.log

srcclean:
	@echo "This command is intended for maintainers to use;"
	@echo "Rebuilding the deleted files requires flex"
	@echo "bison, perl"
	-rm -f scanner.cc grammar.h grammar.cc libparse.cc spSpolyLoop.inc

maintainer-clean: distclean srcclean
	@echo "This command is intended for maintainers to use;"
	@echo "Rebuilding the deleted files requires flex"
	@echo "bison, perl and autoconf"
	-rm configure 

##
## miscellanous targets
##

Singular-bindist: ${OBJS} Makefile
	echo "#define SINGULAR_VERSION_ID " `date '+%y%m%d%H'` >version.h
	echo "#define MAKE_DISTRIBUTION	" >> version.h
	${MAKE} Singular ESingular
	strip Singular ESingular
	${INSTALL} -s Singular Singular-bindist
	${INSTALL} -s ESingular ESingular-bindist
	echo "#define SINGULAR_VERSION_ID " `date '+%y%m%d%H'` >version.h

Singular-static-bindist: ${OBJS} Makefile
	echo "#define SINGULAR_VERSION_ID " `date '+%y%m%d%H'` >version.h
	echo "#define MAKE_DISTRIBUTION	" >> version.h
	${MAKE} Singular-static ESingular
	strip Singular-static ESingular
	mv Singular-static Singular-static-bindist
	${INSTALL} -s ESingular ESingular-bindist
	echo "#define SINGULAR_VERSION_ID " `date '+%y%m%d%H'` >version.h

tar:
	tar cf Singular-${SINGULAR_VERSION}-src.tar ${DISTFILES}
	gzip -f Singular-${SINGULAR_VERSION}-src.tar


TAGS:   ${SOURCES} ${HEADERS} ${INCS}
	etags ${SOURCES} ${HEADERS}

tags:   ${SOURCES} ${HEADERS} ${INCS}
	ctags ${SOURCES} ${HEADERS} ${INCS}

echoLIBS:
	@echo ${SLIBS}

##
## Below here is stuff for developpers
#################################################################

##
## compiler and linker options for debug version
##

CCG		= gcc
CXXG		= gcc
CXXM		= gcc -MM
CCM		= gcc -MM

CFLAGSG		= -g -Wall -Wno-unused ${PIPE} 
CXXFLAGSG	= -g -Wall -Wno-unused ${PIPE} 
CXXTEMPLFLAGSG	= -fno-implicit-templates
DEFSG		= -D@SING_UNAME@ @DEFS@

##
## .og files for having -O and -g object versions available at the same time
## 

OBJG1=	grammar.og scanner.og matpol.og binom.og gnumpfl.og mpr_complex.og \
     febase.og feread.og fehelp.og feResource.og timer.og intvec.og attrib.og lists.og \
     gnumpc.og longrat.og longrat0.og misc.og ring.og numbers.og maps.og\
     hilb.og comm.og kstd1.og kstd2.og kutil.og khstd.og kstdfac.og modulop.og \
     spolys.og ideals.og subexpr.og hdegree.og hutil.og ffields.og shortfl.og \
     longalg.og spolys0.og syz.og syz0.og syz1.og weight.og \
     ipid.og ipshell.og iplib.og ipassign.og ipconv.og ipprint.og\
     polys.og polys0.og polys1.og polys-impl.og extra.og\
     mminit.og sing_dld.og sing_dbm.og silink.og sparsmat.og\
     sing_mp.og fglm.og fglmzero.og fglmvec.og fglmgauss.og fglmhom.og\
     algmap.og clapconv.og  clapmem.og clapsing.og cntrlc.og  sdb.og\
     mpsr_Error.og mpsr_Put.og mpsr_PutPoly.og mpsr_GetPoly.og \
     mpsr_Get.og mpsr_GetMisc.og \
     ndbm.og spSpolyLoop.og libparse.og  mod_raw.og \
     GMPrat.og multicnt.og npolygon.og semic.og spectrum.og splist.og \
     mpr_inout.og mpr_base.og mpr_numeric.og \
     pcv.og kbuckets.og kbPolyProcs.og

OBJG2= mmalloc.og mmheap.og mmpage.og mmcheck.og mmbt.og page.og \
     mmisc.og mmtables.og weight0.og find_exec.og getopt.og fereadl.og


OBJG=$(OBJG1) $(OBJG2) claptmpl.og 

##
## Debug Targets
##

claptmpl.og: claptmpl.cc mod2.h
	$(CXXG)  ${CXXFLAGSG} ${CPPFLAGS} ${DEFSG} -c $< -o $@
$(OBJG1): %.og: %.cc
	$(CXXG) ${CXXFLAGSG} ${CXXTEMPLFLAGSG} ${CPPFLAGS} ${DEFSG} -c $< -o $@

$(OBJG2) gmalloc.og: %.og: %.c
	$(CCG)  ${CFLAGSG} ${CPPFLAGS} ${DEFSG} -c $< -o $@

Singularg: scanner.cc gmalloc.og $(OBJG) iparith.og mpsr_Tok.og tesths.cc version.h 
	$(CXXG) ${CXXFLAGSG} ${CXXTEMPLFLAGSG} ${CPPFLAGS} ${DEFSG} -o Singularg \
	tesths.cc iparith.og mpsr_Tok.og $(OBJG) ${LDFLAGS} ${LIBS} \
	${LD_DYN_FLAGS} gmalloc.og

iparith.og: iparith.inc iparith.cc
	$(CXXG)  ${CXXFLAGSG} ${CXXTEMPLFLAGSG} ${CPPFLAGS} ${DEFSG} -c iparith.cc -o iparith.og

mpsr_Tok.og: iparith.inc mpsr_Tok.cc
	$(CXXG) ${CXXFLAGSG} ${CPPFLAGS} ${CXXTEMPLFLAGSG} ${DEFSG} -c mpsr_Tok.cc -o mpsr_Tok.og

installg: Singularg
	${MKINSTALLDIRS} ${bindir}
	${INSTALL_PROGRAM} Singularg ${bindir}	

##
## compiler and linker options for profile version
##

CCP		= gcc
CXXP		= gcc

CFLAGSP		= -pg -O3 ${PIPE}  
CXXFLAGSP	= -pg -O3 ${PIPE} 
CXXTEMPLFLAGSP	= -fno-implicit-templates
DEFSP		= -DNDEBUG -DDO_PROFILE -D@SING_UNAME@
LDFLAGSP	= -static @LDFLAGS@

CFLAGSB		= -g -O3 ${PIPE}  
CXXFLAGSB	= -g -O3 ${PIPE} 
CXXTEMPLFLAGSB	= -fno-implicit-templates
DEFSB		= -D@SING_UNAME@
LDFLAGSB	= -static @LDFLAGS@
# bprof object  file to link with
BPROFOBJ	= /usr/local/lib/bmon.o


##
## .op files for gprof
## 

OBJP1=	grammar.op scanner.op matpol.op binom.op gnumpfl.op mpr_complex.op \
     febase.op feread.op fehelp.op feResource.op timer.op intvec.op attrib.op lists.op \
     gnumpc.op longrat.op longrat0.op misc.op ring.op numbers.op maps.op\
     hilb.op comm.op kstd1.op kstd2.op kutil.op khstd.op kstdfac.op modulop.op \
     spolys.op ideals.op subexpr.op hdegree.op hutil.op ffields.op shortfl.op \
     longalg.op spolys0.op syz.op syz0.op syz1.op weight.op \
     ipid.op ipshell.op iplib.op ipassign.op ipconv.op ipprint.op\
     polys.op polys0.op polys1.op polys-impl.op extra.op\
     mminit.op sing_dld.op sing_dbm.op silink.op sparsmat.op\
     sing_mp.op fglm.op fglmzero.op fglmvec.op fglmgauss.op fglmhom.op\
     algmap.op clapconv.op  clapmem.op clapsing.op \
     cntrlc.op  sdb.op\
     mpsr_Error.op mpsr_Put.op mpsr_PutPoly.op mpsr_GetPoly.op \
     mpsr_Get.op mpsr_GetMisc.op \
     ndbm.op spSpolyLoop.op libparse.op  mod_raw.op \
     mpr_inout.op mpr_base.op mpr_numeric.op \
     GMPrat.op multicnt.op npolygon.op semic.op spectrum.op splist.op \
     pcv.op kbuckets.op kbPolyProcs.op 

OBJP2= mmalloc.op mmheap.op mmpage.op mmcheck.op mmbt.op page.op \
     mmisc.op mmtables.op weight0.op find_exec.op getopt.op fereadl.op

OBJP=$(OBJP1) $(OBJP2) claptmpl.op

##
## profile targets
##

## for gprof
claptmpl.op: claptmpl.cc mod2.h
	$(CXXP)  ${CXXFLAGSP} ${CPPFLAGS} ${DEFSP} -c $< -o $@

$(OBJP1): %.op: %.cc
	$(CXXP) ${CXXFLAGSP} ${CXXTEMPLFLAGSP} ${CPPFLAGS} ${DEFSP} -c $< -o $@

$(OBJP2) gmalloc.op: %.op: %.c
	$(CCP)  ${CFLAGSP} ${CPPFLAGS} ${DEFSP} -c $< -o $@

Singularp: scanner.cc  gmalloc.op $(OBJP) iparith.op mpsr_Tok.op tesths.cc version.h
	$(CXXP) ${CXXFLAGSP} ${CPPFLAGS} ${DEFSP} -o Singularp \
	tesths.cc iparith.op mpsr_Tok.op $(OBJP) ${LDFLAGSP} ${LIBS} \
	${LD_DYN_FLAGS} gmalloc.op

iparith.op: iparith.inc iparith.cc
	$(CXXP)  ${CXXFLAGSP} ${CPPFLAGS} ${DEFSP} -c iparith.cc -o iparith.op

mpsr_Tok.op: iparith.inc mpsr_Tok.cc
	$(CXXP) ${CXXFLAGSP} ${CPPFLAGS} ${DEFSP} -c mpsr_Tok.cc -o mpsr_Tok.op

## for brof

Singularb: scanner.cc gmalloc.og $(OBJG) iparith.op mpsr_Tok.op tesths.cc version.h 
	$(CXXG) ${CXXFLAGSB} ${CPPFLAGS} ${DEFSG} ${DEFSB} -o Singularb \
	tesths.cc iparith.og mpsr_Tok.og $(OBJG)  $(BPROFOBJ) \
        ${LDFLAGSB} ${LD_DYN_FLAGS} ${LIBS} gmalloc.og

installp: Singularp
	${MKINSTALLDIRS} ${bindir}
	${INSTALL_PROGRAM} Singularp ${bindir}	


##
## dependencies
##
%.dd: %.cc mod2.h 
	echo $(@:.dd=.og) $(@:.dd=.op) $(@:.dd=.ob) " " \\ > $@
	$(CXXM) -DGENTABLE ${CPPFLAGS} ${DEFSG} $< >> $@

%.d: %.c mod2.h 
	echo $(@:.d=.og) $(@:.d=.op) $(@:.d=.ob) " " \\ > $@
	$(CCM) ${CPPFLAGS} ${DEFSG} $< >> $@

depend: $(CXXSOURCES:.cc=.dd) $(CSOURCES:.c=.d) mod2.h 
	cat *.d *.dd >depend

#include $(SOURCES:.cc=.dd) $(CSOURCES:.c=.d)
#include *.d *.dd
ifeq (depend,$(wildcard depend))
include depend
endif


